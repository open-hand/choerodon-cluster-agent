## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry and imagePullSecrets
##
global:
  # -- Global Docker image registry
  imageRegistry:
  # -- Global Docker registry secret names as an array
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  # -- Global StorageClass for Persistent Volume(s)
  storageClass:

# -- String to partially override common.names.fullname template (will maintain the release name)
##
nameOverride:

# -- String to fully override common.names.fullname template
##
fullnameOverride:

# -- Force target Kubernetes version (using Helm capabilites if not set)
##
kubeVersion:

## service image version
## ref: https://github.com/open-hand/server
##
image:
  # -- service image registry
  registry: registry.cn-shanghai.aliyuncs.com
  # -- service image repository
  repository: c7n/choerodon-cluster-agent
  # -- (string) service image tag. Default Chart.AppVersion
  tag: ~
  # -- Specify a imagePullPolicy.
  # Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  # -- Optionally specify an array of imagePullSecrets.
  # Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## e.g:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []

# -- Add labels to all the deployed resources
##
commonLabels: {}

# -- Add annotations to all the deployed resources
##
commonAnnotations: {}

## An array to add extra env vars
## e.g:
## extraEnv:
##   FOO: "bar"
##
extraEnv: 
  # 下面的配置用来设置ssh代理，将originSshUrl中的地址替换成rewriteSshUrl中的地址。多个地址以","分隔，形成对应关系
  # 比如
  # originSshUrl="gitlab1.com.cn,gitlab2.com.cn"
  # rewriteSshUrl="new-gitlab1.com.cn,new-gitlab2.com.cn"
  # 最终
  # gitlab1.com.cn替换成new-gitlab1.com.cn
  # gitlab2.com.cn替换成new-gitlab2.com.cn
  # 原始的gitops仓库域名端口
  ORIGIN_SHH_URL: 
  # 替换后的gitops仓库域名端口
  REWRITE_SSH_URL: 
  ACME_EMAIL: 

config:
  connect:
  token: ""
  logLevel: 0
  envId: ""
  clusterId: 0
  choerodonId: "default"
  extraArgs: {}
  port: 8088

kubeconfig: 

# -- ConfigMap with extra environment variables
##
extraEnvVarsCM: ""

# -- Secret with extra environment variables
##
extraEnvVarsSecret: ""

# -- Command for running the server container (set to default if not set). Use array form
##
command: []

# -- Args for running the server container (set to default if not set). Use array form
##
args: []

# -- Scheduler name
## https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
##
schedulerName: 

# -- EnableServiceLinks indicates whether information about services should be injected into pod's environment variables, 
# matching the syntax of Docker links. Optional: Defaults to false.
## 
enableServiceLinks: false

## server deployment parameters
## The deployment strategy to use to replace existing pods with new ones.
## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
## e.g:
## updateStrategy:
##  type: Recreate
##
updateStrategy:
  # -- Type of deployment. Can be "Recreate" or "RollingUpdate". Default is RollingUpdate.
  type: RollingUpdate
  # -- Rolling update config params. Present only if DeploymentStrategyType = RollingUpdate.
  rollingUpdate:
    maxSurge: 100%
    maxUnavailable: 0

# -- Number of deployment replicas
##
replicaCount: 1

# -- server pod dns policy
## https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy
##
dnsPolicy: ClusterFirstWithHostNet

# -- server pod host aliases
## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
##
hostAliases: []

## server container ports to open
##
containerPort: 
  # --  healthy port
  healthyPort: 8000

# -- Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
securityContext:
  enabled: true
  fsGroup: 33
  runAsUser: 33

# -- Pod labels
## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
##
podLabels: {}

# -- Pod annotations
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
##
podAnnotations: {}

# -- Pod affinity preset.
# Allowed values: soft, hard
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAffinityPreset: ""

# -- Pod anti-affinity preset.
# Allowed values: soft, hard
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAntiAffinityPreset: soft

## Node affinity preset.
## Allowed values: soft, hard
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
##
nodeAffinityPreset:
  # -- Node affinity type.
  # Allowed values: soft, hard
  ##
  type: ""
  # -- Node label key to match
  ## E.g.
  ## key: "kubernetes.io/e2e-az-name"
  ##
  key: ""
  # -- Node label values to match
  ## E.g.
  ## values:
  ##   - e2e-az1
  ##   - e2e-az2
  ##
  values: []

# -- Affinity for pod assignment. Evaluated as a template.
# Note: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when it's set
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}

# -- Node labels for pod assignment. Evaluated as a template.
## ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

# -- Tolerations for pod assignment. Evaluated as a template.
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

## server containers' resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.

  # -- The resources limits for the init container
  limits: 
    # cpu: 2
    memory: 1024Mi

  # -- The requested resources for the init container
  requests: 
    # cpu: 500m
    memory: 768Mi

## Configure extra options for liveness, readiness and startup probes
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
##
livenessProbe:
  # -- Enable livenessProbe
  enabled: true
  # -- Initial delay seconds for livenessProbe
  initialDelaySeconds: 180
  # -- Period seconds for livenessProbe
  periodSeconds: 5
  # -- Timeout seconds for livenessProbe
  timeoutSeconds: 3
  # -- Success threshold for livenessProbe
  successThreshold: 1
  # -- Failure threshold for livenessProbe
  failureThreshold: 5
readinessProbe:
  # -- Enable readinessProbe
  enabled: true
  # -- Initial delay seconds for readinessProbe
  initialDelaySeconds: 5
  # -- Period seconds for readinessProbe
  periodSeconds: 5
  # -- Timeout seconds for readinessProbe
  timeoutSeconds: 3
  # -- Success threshold for readinessProbe
  successThreshold: 1
  # -- Failure threshold for readinessProbe
  failureThreshold: 5
startupProbe:
  # -- Enable startupProbe
  enabled: false
  # -- Initial delay seconds for startupProbe
  initialDelaySeconds: 0
  # -- Period seconds for startupProbe
  periodSeconds: 3
  # -- Timeout seconds for startupProbe
  timeoutSeconds: 2
  # -- Success threshold for startupProbe
  successThreshold: 1
  # -- Failure threshold for startupProbe
  failureThreshold: 60

## Custom Liveness, Readiness, and Startup probes for server
##
# customLivenessProbe -- Custom Liveness
customLivenessProbe: {}
# -- Custom Readiness
customReadinessProbe: {}
# -- Custom Startup probes
customStartupProbe: {}

# -- Extra volumes to add to the server statefulset
##
extraVolumes: []

# -- Extra volume mounts to add to server containers
##
extraVolumeMounts: []

# -- Add init containers to the server pods.
## e.g:
## initContainers:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: Always
##     ports:
##       - name: portname
##         containerPort: 1234
##
initContainers: {}

# -- Add sidecars to the server pods.
## e.g:
## sidecars:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: Always
##     ports:
##       - name: portname
##         containerPort: 1234
##
sidecars: {}

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  # -- If true, use a Persistent Volume Claim, If false, use emptyDir
  ##
  enabled: false
  # -- Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: 

  # -- Data volume mount path
  ##
  mountPath: /data
  # -- Persistent Volume Access Mode
  ##
  accessModes:
    - ReadWriteOnce
  # -- Persistent Volume size
  ##
  size: 8Gi
  # -- Persistent Volume Claim annotations
  ##
  annotations: {}
  # -- Enable persistence using an existing PVC
  ##
  existingClaim: 

## Specifies whether a ServiceAccount should be created
##
rbac:
  # -- Set to true to create serviceAccount
  ##
  create: true
  # -- The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the common.names.fullname template
  ##
  name: ""
