kind: Deployment
apiVersion: {{ include "app.deployment.apiVersion" . }}
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      dnsPolicy: ClusterFirstWithHostNet
{{- if not (empty .Values.hostAliases) }}
      hostAliases:
{{ toYaml .Values.hostAliases | indent 6 }}
{{- end }}
      containers:
      - name: {{ .Release.Name }}
        image: "{{ .Values.image.repository }}:{{ .Chart.Version }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          - name: ACME_EMAIL
            value: {{ .Values.config.email }}
          - name: HTTP_PROXY_URL
            value: {{ .Values.config.httpProxyUrl}}
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        args:
          - /choerodon-cluster-agent
          - --v={{ .Values.config.logLevel }}
          - --connect={{ .Values.config.connect }}?group=cluster:{{ .Values.config.clusterId }}&processor=agent&secret_key=devops_ws&key=cluster:{{ .Values.config.clusterId }}&clusterId={{ .Values.config.clusterId }}&token={{ .Values.config.token }}&version={{ .Chart.Version }}
          - --token={{ .Values.config.token }}
          - --agent-version={{ .Chart.Version }}
          - --choerodon-id={{ .Values.config.choerodonId }}
          - --clusterId={{ .Values.config.clusterId }}
          {{- range $key, $value := .Values.config.extraArgs }}
          - --{{ $key }}={{ $value }}
        {{- end }}
        ports:
          - name: http
            containerPort: {{ .Values.config.port }}
            protocol: TCP
        resources:
{{ toYaml .Values.resources | indent 12 }}
        volumeMounts:
          - mountPath: "/polaris"
            name: cm-polaris-config
      volumes:
        - name: cm-polaris-config
          configMap:
            name: cm-polaris-config
      serviceAccountName: {{ if .Values.rbac.create }}"{{ .Release.Name }}"{{ else }}"{{ .Values.rbac.serviceAccountName }}"{{ end }}
